<%- include('../partials/head', { title: 'User Details - LearnHub' }) %>
<body class="bg-black text-white">
  <%- include('../partials/navbar') %>

  <div class="container mx-auto px-4 py-8">
    <!-- Header with back link -->
    <div class="flex items-center mb-6">
      <a href="/admin/users" class="text-gray-400 hover:text-gray-200 mr-4">
        <i class="fas fa-arrow-left"></i>
      </a>
      <div class="flex items-center">
        <div class="flex-shrink-0 w-16 h-16 bg-gray-700 rounded-full flex items-center justify-center mr-4">
          <i class="fas fa-user text-gray-300 text-xl"></i>
        </div>
        <div>
          <h1 class="text-2xl font-bold"><%= user.name || user.username %></h1>
          <p class="text-gray-400"><%= user.email %></p>
        </div>
      </div>
    </div>
    
    <!-- Success and Error Messages -->
    <% if(success_msg && success_msg.length > 0) { %>
      <div class="bg-green-800 border border-green-600 text-green-300 px-4 py-3 rounded mb-4">
        <%= success_msg %>
      </div>
    <% } %>
    <% if(error_msg && error_msg.length > 0) { %>
      <div class="bg-red-800 border border-red-600 text-red-300 px-4 py-3 rounded mb-4">
        <%= error_msg %>
      </div>
    <% } %>
    
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
      <!-- Left Column: Avatar & Basic Info -->
      <div class="md:col-span-1">
        <div class="bg-gray-800 rounded-lg shadow-md p-6">
          <div class="flex flex-col items-center">
            <div class="w-32 h-32 rounded-full bg-gray-700 flex items-center justify-center mb-4">
              <i class="fas fa-user text-gray-300 text-4xl"></i>
            </div>
            <h2 class="text-xl font-bold text-center mb-2"><%= user.name || user.username %></h2>
            <p class="text-gray-400 text-center mb-4"><%= user.email %></p>
            
            <!-- Role Badge -->
            <div class="mb-4">
              <% 
                let roleClass = 'bg-yellow-800 text-yellow-300';
                if (user.role === 'admin') {
                  roleClass = 'bg-red-800 text-red-300';
                } else if (user.role === 'instructor') {
                  roleClass = 'bg-blue-800 text-blue-300';
                }
              %>
              <span class="<%= roleClass %> px-3 py-1 rounded-full text-sm font-medium">
                <%= user.role ? user.role.charAt(0).toUpperCase() + user.role.slice(1) : 'Student' %>
              </span>
            </div>
            
            <!-- Action Buttons -->
            <div class="w-full space-y-3">
              <a href="/admin/users/<%= user._id %>/edit" class="w-full bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition-colors text-center block">
                <i class="fas fa-edit mr-2"></i>Edit User
              </a>
              <% if (user.role !== 'admin' || (user.role === 'admin' && adminCount > 1)) { %>
                <button onclick="deleteUser('<%= user._id %>')" class="w-full bg-red-500 text-white py-2 px-4 rounded-md hover:bg-red-600 transition-colors">
                  <i class="fas fa-trash mr-2"></i>Delete User
                </button>
              <% } else { %>
                <button disabled class="w-full bg-gray-600 text-gray-400 py-2 px-4 rounded-md cursor-not-allowed">
                  <i class="fas fa-lock mr-2"></i>Cannot Delete (Only Admin)
                </button>
              <% } %>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Right Column: Detailed Information -->
      <div class="md:col-span-2">
        <div class="space-y-6">
          <!-- User Information -->
          <div class="bg-gray-800 rounded-lg shadow-md overflow-hidden">
            <div class="p-4 border-b border-gray-700">
              <h2 class="text-lg font-semibold">User Information</h2>
            </div>
            
            <div class="p-6">
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <h3 class="text-sm font-medium text-gray-400 mb-1">Full Name</h3>
                  <p class="text-gray-100"><%= user.name || user.username %></p>
                </div>
                <div>
                  <h3 class="text-sm font-medium text-gray-400 mb-1">Email</h3>
                  <p class="text-gray-100"><%= user.email %></p>
                </div>
                <div>
                  <h3 class="text-sm font-medium text-gray-400 mb-1">Role</h3>
                  <p class="text-gray-100"><%= user.role ? user.role.charAt(0).toUpperCase() + user.role.slice(1) : 'Student' %></p>
                </div>
                <div>
                  <h3 class="text-sm font-medium text-gray-400 mb-1">Join Date</h3>
                  <p class="text-gray-100"><%= new Date(user.createdAt).toLocaleDateString() %></p>
                </div>
                <% if (user.bio) { %>
                  <div class="md:col-span-2">
                    <h3 class="text-sm font-medium text-gray-400 mb-1">Bio</h3>
                    <p class="text-gray-100"><%= user.bio %></p>
                  </div>
                <% } %>
              </div>
            </div>
          </div>
          
          <!-- For Students: Enrolled Courses -->
          <% if (user && user.role === 'student') { %>
            <div class="bg-gray-800 rounded-lg shadow-md overflow-hidden">
              <div class="p-4 border-b border-gray-700">
                <h2 class="text-lg font-semibold">Enrolled Courses (<%= enrolledCourses.length %>)</h2>
              </div>
              
              <% if (enrolledCourses.length > 0) { %>
                <div class="divide-y divide-gray-700">
                  <% enrolledCourses.forEach(function(course) { %>
                    <div class="p-4 flex items-center">
                      <img src="<%= course.thumbnail %>" alt="<%= course.title %>" class="w-16 h-16 object-cover rounded-md mr-4">
                      <div class="flex-1">
                        <h3 class="font-medium text-gray-100"><%= course.title %></h3>
                        <p class="text-sm text-gray-400"><%= course.instructor %></p>
                        <div class="flex items-center mt-1">
                          <div class="w-24 bg-gray-700 rounded-full h-2 mr-2">
                            <div class="bg-blue-500 h-2 rounded-full" style="width: <%= course.progress %>%"></div>
                          </div>
                          <span class="text-xs text-gray-400"><%= course.progress %>% complete</span>
                        </div>
                      </div>
                      <a href="/courses/<%= course._id %>" target="_blank" class="text-blue-500 hover:text-blue-400">
                        <i class="fas fa-external-link-alt"></i>
                      </a>
                    </div>
                  <% }); %>
                </div>
              <% } else { %>
                <div class="p-6 text-center">
                  <p class="text-gray-400">This student is not enrolled in any courses yet.</p>
                </div>
              <% } %>
            </div>
          <% } else if (user && user.role === 'instructor') { %>
            <!-- For Instructors: Created Courses -->
            <div class="bg-gray-800 rounded-lg shadow-md overflow-hidden">
              <div class="p-4 border-b border-gray-700">
                <h2 class="text-lg font-semibold">Created Courses (<%= instructorCourses.length %>)</h2>
              </div>
              
              <% if (instructorCourses.length > 0) { %>
                <div class="divide-y divide-gray-700">
                  <% instructorCourses.forEach(function(course) { %>
                    <div class="p-4 flex items-center">
                      <img src="<%= course.thumbnail %>" alt="<%= course.title %>" class="w-16 h-16 object-cover rounded-md mr-4">
                      <div class="flex-1">
                        <h3 class="font-medium text-gray-100"><%= course.title %></h3>
                        <div class="flex items-center mt-1">
                          <span class="bg-gray-700 text-gray-300 px-2 py-1 rounded-full text-xs mr-2"><%= course.category %></span>
                          <span class="<%= course.status === 'published' ? 'bg-green-800 text-green-300' : 'bg-yellow-800 text-yellow-300' %> px-2 py-1 rounded-full text-xs">
                            <%= course.status ? (course.status.charAt(0).toUpperCase() + course.status.slice(1)) : 'N/A' %>
                          </span>
                        </div>
                        <div class="flex items-center mt-1">
                          <span class="text-xs text-gray-400 mr-3"><i class="fas fa-users mr-1"></i> <%= course.students %> students</span>
                          <span class="text-xs text-gray-400"><i class="fas fa-star mr-1"></i> <%= course.rating %> rating</span>
                        </div>
                      </div>
                      <a href="/courses/<%= course._id %>" target="_blank" class="text-blue-500 hover:text-blue-400">
                        <i class="fas fa-external-link-alt"></i>
                      </a>
                    </div>
                  <% }); %>
                </div>
              <% } else { %>
                <div class="p-6 text-center">
                  <p class="text-gray-400">This instructor has not created any courses yet.</p>
                </div>
              <% } %>
            </div>
          <% } %>
          
          <!-- Order History -->
          <div class="bg-gray-800 rounded-lg shadow-md overflow-hidden">
            <div class="p-4 border-b border-gray-700">
              <h2 class="text-lg font-semibold">Order History (<%= orders.length %>)</h2>
            </div>
            
            <% if (orders.length > 0) { %>
              <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-700">
                  <thead class="bg-gray-700">
                    <tr>
                      <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Order ID</th>
                      <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Course</th>
                      <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Amount</th>
                      <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Date</th>
                      <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Status</th>
                    </tr>
                  </thead>
                  <tbody class="bg-gray-800 divide-y divide-gray-700">
                    <% orders.forEach(function(order) { %>
                      <tr>
                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-100">
                          <%= order.id %>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-400">
                          <%= order.courseTitle %>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-400">
                          ₹<%= order.amount.toFixed(2) %>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-400">
                          <%= new Date(order.createdAt).toLocaleDateString() %>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                          <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-800 text-green-300">
                            <%= order.status.charAt(0).toUpperCase() + order.status.slice(1) %>
                          </span>
                        </td>
                      </tr>
                    <% }); %>
                  </tbody>
                </table>
              </div>
            <% } else { %>
              <div class="p-6 text-center">
                <p class="text-gray-400">This user has not made any purchases yet.</p>
              </div>
            <% } %>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Loading Overlay -->
  <div id="loading-overlay" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50" style="display: none;">
    <div class="bg-gray-800 p-6 rounded-lg">
      <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto"></div>
      <p class="text-white mt-2">Loading user details...</p>
    </div>
  </div>

  <!-- Alert Container -->
  <div id="alert-container" class="fixed top-4 right-4 z-50"></div>

  <%- include('../partials/footer') %>
  <%- include('../partials/scripts') %>
  <script>
    let currentUser = null;
    let enrolledCourses = [];
    let instructorCourses = [];
    let orders = [];
    let adminCount = 0;
    const userId = '<%= userId %>';
    const loadingOverlay = document.getElementById('loading-overlay');
    const alertContainer = document.getElementById('alert-container');

    // Initialize page
    document.addEventListener('DOMContentLoaded', function() {
        loadUserDetails();
        setupEventListeners();
    });

    // Load user details via fetch API
    async function loadUserDetails() {
        showLoading(true);
        
        try {
            console.log('Fetching user details for:', userId);
            const response = await fetch(`/admin/api/users/${userId}`);
            
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            
            const data = await response.json();
            
            if (data.success) {
                currentUser = data.data.user;
                enrolledCourses = data.data.enrolledCourses || [];
                instructorCourses = data.data.instructorCourses || [];
                orders = data.data.orders || [];
                adminCount = data.data.adminCount || 0;
                
                updateUserDetails();
            } else {
                showAlert('Error loading user details: ' + (data.message || 'Unknown error'), 'error');
            }
        } catch (error) {
            console.error('Error loading user details:', error);
            showAlert('Error loading user details: ' + error.message, 'error');
        } finally {
            showLoading(false);
        }
    }

    // Update the DOM with user details
    function updateUserDetails() {
        if (!currentUser) return;

        // Update header information
        document.querySelectorAll('h1').forEach(h1 => {
            if (h1.textContent.includes('Loading')) {
                h1.textContent = currentUser.name || currentUser.username;
            }
        });

        // Update user name displays
        document.querySelectorAll('h2').forEach(h2 => {
            if (h2.textContent.includes('Loading')) {
                h2.textContent = currentUser.name || currentUser.username;
            }
        });

        // Update email displays
        const emailElements = document.querySelectorAll('p');
        emailElements.forEach(p => {
            if (p.textContent.includes('Loading')) {
                p.textContent = currentUser.email;
            }
        });

        // Update role badge
        const roleBadge = document.querySelector('.bg-yellow-800, .bg-red-800, .bg-blue-800');
        if (roleBadge && currentUser.role) {
            // Remove all role classes
            roleBadge.className = roleBadge.className.replace(/bg-(yellow|red|blue)-800 text-(yellow|red|blue)-300/g, '');
            
            let roleClass = 'bg-yellow-800 text-yellow-300';
            if (currentUser.role === 'admin') {
                roleClass = 'bg-red-800 text-red-300';
            } else if (currentUser.role === 'instructor') {
                roleClass = 'bg-blue-800 text-blue-300';
            }
            
            roleBadge.className += ` ${roleClass}`;
            roleBadge.textContent = currentUser.role ? currentUser.role.charAt(0).toUpperCase() + currentUser.role.slice(1) : 'Student';
        }

        // Update user information section
        updateUserInformation();
        updateCoursesSection();
        updateOrdersSection();
        updateActionButtons();
    }

    function updateUserInformation() {
        const infoSection = document.querySelector('.bg-gray-800 .grid');
        if (infoSection && currentUser) {
            const nameDiv = infoSection.children[0];
            const emailDiv = infoSection.children[1];
            const roleDiv = infoSection.children[2];
            const dateDiv = infoSection.children[3];

            if (nameDiv) nameDiv.querySelector('p').textContent = currentUser.name || currentUser.username;
            if (emailDiv) emailDiv.querySelector('p').textContent = currentUser.email;
            if (roleDiv) roleDiv.querySelector('p').textContent = currentUser.role ? currentUser.role.charAt(0).toUpperCase() + currentUser.role.slice(1) : 'Student';
            if (dateDiv) dateDiv.querySelector('p').textContent = new Date(currentUser.createdAt).toLocaleDateString();

            // Handle bio if exists
            if (currentUser.bio) {
                const bioDiv = infoSection.children[4];
                if (bioDiv) {
                    bioDiv.querySelector('p').textContent = currentUser.bio;
                } else {
                    // Create bio section if it doesn't exist
                    const bioSection = document.createElement('div');
                    bioSection.className = 'md:col-span-2';
                    bioSection.innerHTML = `
                        <h3 class="text-sm font-medium text-gray-400 mb-1">Bio</h3>
                        <p class="text-gray-100">${currentUser.bio}</p>
                    `;
                    infoSection.appendChild(bioSection);
                }
            }
        }
    }

    function updateCoursesSection() {
        // This would involve more complex DOM manipulation
        // For now, we'll reload the page to show updated data
        // In a full implementation, we would dynamically update the courses sections
    }

    function updateOrdersSection() {
        // This would involve more complex DOM manipulation
        // For now, we'll reload the page to show updated data
        // In a full implementation, we would dynamically update the orders table
    }

    function updateActionButtons() {
        // Update delete button state
        const deleteButton = document.querySelector('button[onclick*="deleteUser"]');
        if (deleteButton && currentUser) {
            if (currentUser.role === 'admin' && adminCount <= 1) {
                deleteButton.disabled = true;
                deleteButton.className = 'w-full bg-gray-600 text-gray-400 py-2 px-4 rounded-md cursor-not-allowed';
                deleteButton.innerHTML = '<i class="fas fa-lock mr-2"></i>Cannot Delete (Only Admin)';
            } else {
                deleteButton.disabled = false;
                deleteButton.className = 'w-full bg-red-500 text-white py-2 px-4 rounded-md hover:bg-red-600 transition-colors';
                deleteButton.innerHTML = '<i class="fas fa-trash mr-2"></i>Delete User';
            }
        }
    }

    function setupEventListeners() {
        // No additional event listeners needed for this page
    }

    function showLoading(show) {
        if (loadingOverlay) {
            loadingOverlay.style.display = show ? 'flex' : 'none';
        }
    }

    function showAlert(message, type = 'info') {
        const alertDiv = document.createElement('div');
        const bgColor = type === 'error' ? 'bg-red-800 border-red-600 text-red-300' : 
                       type === 'success' ? 'bg-green-800 border-green-600 text-green-300' :
                       'bg-blue-800 border-blue-600 text-blue-300';
        
        alertDiv.className = `${bgColor} border px-4 py-3 rounded mb-4 shadow-lg`;
        alertDiv.textContent = message;
        
        alertContainer.appendChild(alertDiv);
        
        setTimeout(() => {
            if (alertDiv.parentNode) {
                alertDiv.parentNode.removeChild(alertDiv);
            }
        }, 5000);
    }

    function deleteUser(userId) {
      if (confirm('Are you sure you want to delete this user? This action cannot be undone.')) {
        fetch(`/admin/users/${userId}`, {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json',
          }
        })
        .then(response => {
          if (response.ok) {
            window.location.href = '/admin/users';
          } else {
            alert('Error deleting user');
          }
        })
        .catch(error => {
          console.error('Error:', error);
          alert('Error deleting user');
        });
      }
    }
  </script>
</body>
</html>