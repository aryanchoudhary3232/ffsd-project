
<%- include('../partials/head', { title: 'Revenue - LearnHub' }) %>
<body class="bg-black text-white">
  <%- include('../partials/navbar') %>

  <div class="container mx-auto px-4 py-8">
    <!-- Header with refresh button -->
    <div class="flex items-center justify-between mb-6">
      <h1 class="text-2xl font-bold">Revenue Overview</h1>
      <button id="refresh-button" onclick="loadRevenueData()" class="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 transition-colors flex items-center">
        <i id="refresh-icon" class="fas fa-sync-alt mr-2"></i>
        <span>Refresh Data</span>
      </button>
    </div>

    <!-- Loading Overlay -->
    <div id="loading-overlay" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div class="bg-gray-800 p-6 rounded-lg">
        <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto"></div>
        <p class="text-white mt-2">Loading revenue data...</p>
      </div>
    </div>

    <!-- Alert Container -->
    <div id="alert-container" class="mb-4"></div>

    <!-- Revenue Statistics Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
      <!-- Total Revenue -->
      <div class="bg-gray-800 rounded-lg shadow-md p-6">
        <h2 class="text-lg font-semibold mb-2 text-gray-300">Total Revenue</h2>
        <p id="total-revenue" class="text-3xl font-bold text-green-400">₹0.00</p>
        <p id="revenue-growth" class="text-sm text-gray-400 mt-1">Growth: 0%</p>
      </div>

      <!-- Total Orders -->
      <div class="bg-gray-800 rounded-lg shadow-md p-6">
        <h2 class="text-lg font-semibold mb-2 text-gray-300">Total Orders</h2>
        <p id="total-orders" class="text-3xl font-bold text-blue-400">0</p>
        <p id="completed-orders" class="text-sm text-gray-400 mt-1">Completed: 0</p>
      </div>

      <!-- Average Order Value -->
      <div class="bg-gray-800 rounded-lg shadow-md p-6">
        <h2 class="text-lg font-semibold mb-2 text-gray-300">Avg. Order Value</h2>
        <p id="avg-order-value" class="text-3xl font-bold text-purple-400">₹0.00</p>
        <p id="pending-orders" class="text-sm text-gray-400 mt-1">Pending: 0</p>
      </div>

      <!-- Top Month -->
      <div class="bg-gray-800 rounded-lg shadow-md p-6">
        <h2 class="text-lg font-semibold mb-2 text-gray-300">Best Month</h2>
        <p id="top-month-name" class="text-lg font-bold text-yellow-400">N/A</p>
        <p id="top-month-revenue" class="text-sm text-gray-400 mt-1">₹0.00</p>
      </div>
    </div>

    <!-- Monthly Revenue Breakdown -->
    <div class="bg-gray-800 rounded-lg shadow-md overflow-hidden">
      <div class="p-4 border-b border-gray-700">
        <h2 class="text-xl font-bold">Monthly Revenue Breakdown</h2>
        <p id="data-last-updated" class="text-sm text-gray-400 mt-1">Last updated: Never</p>
      </div>
      
      <div id="monthly-revenue-container">
        <div id="revenue-table-loading" class="p-6 text-center">
          <div class="animate-pulse flex space-x-4">
            <div class="flex-1 space-y-2">
              <div class="h-4 bg-gray-700 rounded"></div>
              <div class="h-4 bg-gray-700 rounded w-5/6"></div>
              <div class="h-4 bg-gray-700 rounded w-4/6"></div>
            </div>
          </div>
        </div>
        
        <div id="revenue-table" class="hidden">
          <table class="min-w-full divide-y divide-gray-700">
            <thead class="bg-gray-700">
              <tr>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Month</th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Revenue</th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Growth</th>
              </tr>
            </thead>
            <tbody id="revenue-table-body" class="bg-gray-800 divide-y divide-gray-700">
              <!-- Data will be populated here -->
            </tbody>
          </table>
        </div>

        <div id="no-revenue-data" class="hidden p-6 text-center">
          <i class="fas fa-chart-line text-4xl text-gray-500 mb-4"></i>
          <p class="text-gray-400">No revenue data available.</p>
          <p class="text-sm text-gray-500 mt-1">Revenue data will appear here once orders are completed.</p>
        </div>
      </div>
    </div>
  </div>

  <%- include('../partials/footer') %>
  <%- include('../partials/scripts') %>

  <script>
    let isLoading = false;

    // Hide loading overlay initially
    document.getElementById('loading-overlay').style.display = 'none';

    // Load revenue data when page loads
    document.addEventListener('DOMContentLoaded', function() {
      loadRevenueData();
    });

    async function loadRevenueData() {
      if (isLoading) return;
      
      isLoading = true;
      showLoading();

      try {
        console.log('Loading revenue data...');
        
        const response = await fetch('/admin/api/revenue', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
            'X-Requested-With': 'XMLHttpRequest'
          }
        });

        // Log response headers for debugging
        console.log('Response headers:', {
          totalRevenue: response.headers.get('X-Total-Revenue'),
          totalOrders: response.headers.get('X-Total-Orders'),
          avgOrderValue: response.headers.get('X-Avg-Order-Value'),
          revenueGrowth: response.headers.get('X-Revenue-Growth'),
          completedOrders: response.headers.get('X-Completed-Orders'),
          pendingOrders: response.headers.get('X-Pending-Orders')
        });

        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }

        const data = await response.json();
        console.log('Revenue data received:', data);

        // Update revenue statistics
        updateRevenueStatistics(data);

        // Update monthly breakdown
        updateMonthlyBreakdown(data.monthlyRevenue || []);

        // Update last updated time
        document.getElementById('data-last-updated').textContent = 
          `Last updated: ${new Date().toLocaleString()}`;

        showAlert('Revenue data loaded successfully', 'success');

      } catch (error) {
        console.error('Error loading revenue data:', error);
        showAlert(`Failed to load revenue data: ${error.message}`, 'error');
      } finally {
        hideLoading();
        isLoading = false;
      }
    }

    function updateRevenueStatistics(data) {
      // Total Revenue
      document.getElementById('total-revenue').textContent = `₹${data.totalRevenue || 0}`;
      
      // Revenue Growth
      const growthElement = document.getElementById('revenue-growth');
      if (data.revenueGrowth !== undefined) {
        const growthColor = data.revenueGrowth >= 0 ? 'text-green-400' : 'text-red-400';
        const growthIcon = data.revenueGrowth >= 0 ? '↗' : '↘';
        growthElement.innerHTML = `<span class="${growthColor}">${growthIcon} ${data.revenueGrowth}% growth</span>`;
      } else {
        growthElement.textContent = 'Growth: N/A';
      }

      // Total Orders
      document.getElementById('total-orders').textContent = data.totalOrders || 0;
      
      // Completed Orders
      document.getElementById('completed-orders').textContent = 
        `Completed: ${data.completedOrders || 0}`;

      // Average Order Value
      document.getElementById('avg-order-value').textContent = 
        `₹${data.avgOrderValue || '0.00'}`;
      
      // Pending Orders
      document.getElementById('pending-orders').textContent = 
        `Pending: ${data.pendingOrders || 0}`;

      // Top Month
      if (data.topMonth) {
        document.getElementById('top-month-name').textContent = data.topMonth.month;
        document.getElementById('top-month-revenue').textContent = `₹${data.topMonth.revenue}`;
      } else {
        document.getElementById('top-month-name').textContent = 'N/A';
        document.getElementById('top-month-revenue').textContent = '₹0.00';
      }
    }

    function updateMonthlyBreakdown(monthlyRevenue) {
      const tableBody = document.getElementById('revenue-table-body');
      const revenueTable = document.getElementById('revenue-table');
      const noDataDiv = document.getElementById('no-revenue-data');
      const tableLoading = document.getElementById('revenue-table-loading');

      // Hide loading
      tableLoading.classList.add('hidden');

      if (monthlyRevenue.length === 0) {
        revenueTable.classList.add('hidden');
        noDataDiv.classList.remove('hidden');
        return;
      }

      // Clear existing rows
      tableBody.innerHTML = '';

      // Populate table with monthly data
      monthlyRevenue.forEach((data, index) => {
        const row = document.createElement('tr');
        row.className = 'hover:bg-gray-700 transition-colors';

        // Calculate growth for display
        let growthDisplay = '';
        if (data.growth !== undefined && data.growth !== null) {
          const growthColor = data.growth >= 0 ? 'text-green-400' : 'text-red-400';
          const growthIcon = data.growth >= 0 ? '↗' : '↘';
          growthDisplay = `<span class="${growthColor}">${growthIcon} ${data.growth}%</span>`;
        } else {
          growthDisplay = '<span class="text-gray-500">N/A</span>';
        }

        row.innerHTML = `
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-300 font-medium">
            ${data.month}
          </td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-300">
            ₹${data.revenue}
          </td>
          <td class="px-6 py-4 whitespace-nowrap text-sm">
            ${growthDisplay}
          </td>
        `;
        
        tableBody.appendChild(row);
      });

      noDataDiv.classList.add('hidden');
      revenueTable.classList.remove('hidden');
    }

    function showLoading() {
      document.getElementById('loading-overlay').style.display = 'flex';
      
      // Animate refresh button
      const refreshIcon = document.getElementById('refresh-icon');
      refreshIcon.classList.add('fa-spin');
      
      // Show table loading state
      const tableLoading = document.getElementById('revenue-table-loading');
      const revenueTable = document.getElementById('revenue-table');
      const noDataDiv = document.getElementById('no-revenue-data');
      
      tableLoading.classList.remove('hidden');
      revenueTable.classList.add('hidden');
      noDataDiv.classList.add('hidden');
    }

    function hideLoading() {
      document.getElementById('loading-overlay').style.display = 'none';
      
      // Stop refresh button animation
      const refreshIcon = document.getElementById('refresh-icon');
      refreshIcon.classList.remove('fa-spin');
    }

    function showAlert(message, type) {
      const alertContainer = document.getElementById('alert-container');
      const alertClass = type === 'success' ? 
        'bg-green-800 border-green-600 text-green-300' : 
        'bg-red-800 border-red-600 text-red-300';
      
      alertContainer.innerHTML = `
        <div class="${alertClass} border px-4 py-3 rounded mb-4">
          ${message}
        </div>
      `;
      
      // Auto-hide success alerts after 3 seconds
      if (type === 'success') {
        setTimeout(() => {
          alertContainer.innerHTML = '';
        }, 3000);
      }
    }

    // Network debugging
    console.log('Revenue page loaded - check Network tab for API calls');
    console.log('Available endpoints: /admin/api/revenue');
  </script>

</body>
</html>
